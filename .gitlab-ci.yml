before_script:
  - mkdir -p .cache
  - export GOPATH="$CI_PROJECT_DIR/.cache"

cache:
    paths:
      - .cache

stages:
  - test
  - build
  - release

format:
  stage: test
  image: golang:latest
  script:
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)
    #- go test -race $(go list ./... | grep -v /vendor/)

compile:
  stage: build
  image: golang:latest
  script:
    - echo "Job ID - $CI_JOB_ID"
    - echo COMPILE_JOB_ID=$CI_JOB_ID >> compile.env
    - bash build.sh
  artifacts:
    paths:
      - bin
    reports:
      dotenv: compile.env

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - job: compile
      artifacts: true
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo "Running release from $CI_COMMIT_TAG"
  release:
    tag_name: '$CI_COMMIT_TAG'
    description: '$CI_COMMIT_TAG'
    ref: '$CI_COMMIT_TAG'
    assets:
      links:
        - name: Linux x86_64
          url: 'https://gitlab.com/njinx/instx/-/jobs/${COMPILE_JOB_ID}/artifacts/raw/bin/instx-linux-amd64'
        - name: Linux x86
          url: 'https://gitlab.com/njinx/instx/-/jobs/${COMPILE_JOB_ID}/artifacts/raw/bin/instx-linux-386'
        - name: Windows x86_64
          url: 'https://gitlab.com/njinx/instx/-/jobs/${COMPILE_JOB_ID}/artifacts/raw/bin/instx-windows-amd64.exe'
        - name: Windows x86
          url: 'https://gitlab.com/njinx/instx/-/jobs/${COMPILE_JOB_ID}/artifacts/raw/bin/instx-windows-386.exe'